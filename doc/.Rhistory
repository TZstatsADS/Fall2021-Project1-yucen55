library(reshape2)
library(dplyr)
library(SentimentAnalysis)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(tm)
library(Rcpp)
library(tidytext)
library(tidyr)
library(tibble)
data <- read.csv("../Data/philosophy_data.csv")
# Check data for each school, we have 13 schools in total.
data %>% group_by(school) %>%
summarise(articles_num = n())
# Separate the whole data sets into 13 subsets by schools.
analytic_df <- data[data$school=="analytic",]
aristotle_df <- data[data$school=="aristotle",]
capitalism_df <- data[data$school=="capitalism",]
communism_df <- data[data$school=="communism",]
continental_df <- data[data$school=="continental",]
empiricism_df <- data[data$school=="empiricism",]
feminism_df <- data[data$school=="feminism",]
german_idealism_df <- data[data$school=="german_idealism",]
nietzsche_df <- data[data$school=="nietzsche",]
phenomenology_df <- data[data$school=="phenomenology",]
plato_df <- data[data$school=="plato",]
rationalism_df <- data[data$school=="rationalism",]
stoicism_df <- data[data$school=="stoicism",]
library(reshape2)
library(dplyr)
library(SentimentAnalysis)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(tm)
library(Rcpp)
library(tidytext)
library(tidyr)
library(tibble)
data <- read.csv("../Data/philosophy_data.csv")
# Check data for each school, we have 13 schools in total.
data %>% group_by(school) %>%
summarise(articles_num = n())
# Separate the whole data sets into 13 subsets by schools.
analytic_df <- data[data$school=="analytic",]
aristotle_df <- data[data$school=="aristotle",]
capitalism_df <- data[data$school=="capitalism",]
communism_df <- data[data$school=="communism",]
continental_df <- data[data$school=="continental",]
empiricism_df <- data[data$school=="empiricism",]
feminism_df <- data[data$school=="feminism",]
german_idealism_df <- data[data$school=="german_idealism",]
nietzsche_df <- data[data$school=="nietzsche",]
phenomenology_df <- data[data$school=="phenomenology",]
plato_df <- data[data$school=="plato",]
rationalism_df <- data[data$school=="rationalism",]
stoicism_df <- data[data$school=="stoicism",]
# Random sample generator function
random_sam <- function(school_df){
i <- sample(1:nrow(school_df), 10000, replace=FALSE)
return (school_df[i,])
}
# Get random samples
set.seed(1234)
analytic_sam <- random_sam(analytic_df)
aristotle_sam <- random_sam(aristotle_df)
capitalism_sam <- random_sam(capitalism_df)
communism_sam <- random_sam(communism_df)
continental_sam <- random_sam(continental_df)
empiricism_sam <- random_sam(empiricism_df)
german_idealism_sam <- random_sam(german_idealism_df)
nietzsche_sam <- random_sam(nietzsche_df)
phenomenology_sam <- random_sam(phenomenology_df)
plato_sam <- random_sam(plato_df)
rationalism_sam <- random_sam(rationalism_df)
# Extract each school's sentiment according to the QDAP dictionary
feminism_sent <- analyzeSentiment(feminism_df$sentence_str)$SentimentQDAP
feminism_result <- convertToDirection(feminism_sent)
# Define sent_count function to calculate the proportion of positive, negative and neutral words
sent_count <- function(school_result){
num_pos <- 0
num_neu <- 0
num_neg <- 0
for(i in 1:length(school_result)){
if(is.na(school_result[i]) == FALSE){
if(school_result[i] == "positive"){
num_pos <- num_pos+1
}
else if(school_result[i] == "neutral"){
num_neu <- num_neu+1
}
else{num_neg <- num_neg+1}
}
}
count_df <- data.frame(positive=num_pos, neutral=num_neu, negative=num_neg )
return(count_df)
}
# Pie chart for sentimental analysis of feminism
feminism_ct <- sent_count(feminism_result)
pie_labels <- paste0(colnames(feminism_ct), " = ", round(100 * feminism_ct/sum(feminism_ct), 2), "%")
pie(c(feminism_ct$pos,feminism_ct$neu,feminism_ct$neg),labels=pie_labels, main="Pie Chart for Feminism")
library(reshape2)
library(dplyr)
library(SentimentAnalysis)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(tm)
library(Rcpp)
library(tidytext)
library(tidyr)
library(tibble)
data <- read.csv("../data/philosophy_data.csv")
# Check data for each school, we have 13 schools in total.
data %>% group_by(school) %>%
summarise(articles_num = n())
# Separate the whole data sets into 13 subsets by schools.
analytic_df <- data[data$school=="analytic",]
aristotle_df <- data[data$school=="aristotle",]
capitalism_df <- data[data$school=="capitalism",]
communism_df <- data[data$school=="communism",]
continental_df <- data[data$school=="continental",]
empiricism_df <- data[data$school=="empiricism",]
feminism_df <- data[data$school=="feminism",]
german_idealism_df <- data[data$school=="german_idealism",]
nietzsche_df <- data[data$school=="nietzsche",]
phenomenology_df <- data[data$school=="phenomenology",]
plato_df <- data[data$school=="plato",]
rationalism_df <- data[data$school=="rationalism",]
stoicism_df <- data[data$school=="stoicism",]
library(reshape2)
library(dplyr)
library(SentimentAnalysis)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(tm)
library(Rcpp)
library(tidytext)
library(tidyr)
library(tibble)
data <- read.csv("../data/philosophy_data.csv")
# Check data for each school, we have 13 schools in total.
data %>% group_by(school) %>%
summarise(articles_num = n())
# Separate the whole data sets into 13 subsets by schools.
analytic_df <- data[data$school=="analytic",]
aristotle_df <- data[data$school=="aristotle",]
capitalism_df <- data[data$school=="capitalism",]
communism_df <- data[data$school=="communism",]
continental_df <- data[data$school=="continental",]
empiricism_df <- data[data$school=="empiricism",]
feminism_df <- data[data$school=="feminism",]
german_idealism_df <- data[data$school=="german_idealism",]
nietzsche_df <- data[data$school=="nietzsche",]
phenomenology_df <- data[data$school=="phenomenology",]
plato_df <- data[data$school=="plato",]
rationalism_df <- data[data$school=="rationalism",]
stoicism_df <- data[data$school=="stoicism",]
library(reshape2)
library(dplyr)
library(SentimentAnalysis)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(tm)
library(Rcpp)
library(tidytext)
library(tidyr)
library(tibble)
data <- read.csv("../data/philosophy_data.csv")
library(reshape2)
library(dplyr)
library(SentimentAnalysis)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(tm)
library(Rcpp)
library(tidytext)
library(tidyr)
library(tibble)
data <- read.csv("../data/philosophy_data.csv")
# Check data for each school, we have 13 schools in total.
school_13 <- data %>% group_by(school) %>%
summarise(articles_num = n())
school_13
# Separate the whole data sets into 13 subsets by schools.
analytic_df <- data[data$school=="analytic",]
aristotle_df <- data[data$school=="aristotle",]
capitalism_df <- data[data$school=="capitalism",]
communism_df <- data[data$school=="communism",]
continental_df <- data[data$school=="continental",]
empiricism_df <- data[data$school=="empiricism",]
feminism_df <- data[data$school=="feminism",]
german_idealism_df <- data[data$school=="german_idealism",]
nietzsche_df <- data[data$school=="nietzsche",]
phenomenology_df <- data[data$school=="phenomenology",]
plato_df <- data[data$school=="plato",]
rationalism_df <- data[data$school=="rationalism",]
stoicism_df <- data[data$school=="stoicism",]
library(reshape2)
library(dplyr)
library(SentimentAnalysis)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(tm)
library(Rcpp)
library(tidytext)
library(tidyr)
library(tibble)
data <- read.csv("../data/philosophy_data.csv")
# Check data for each school, we have 13 schools in total.
school_13 <- data %>% group_by(school) %>%
summarise(articles_num = n())
school_13
# Separate the whole data sets into 13 subsets by schools.
analytic_df <- data[data$school=="analytic",]
aristotle_df <- data[data$school=="aristotle",]
capitalism_df <- data[data$school=="capitalism",]
communism_df <- data[data$school=="communism",]
continental_df <- data[data$school=="continental",]
empiricism_df <- data[data$school=="empiricism",]
feminism_df <- data[data$school=="feminism",]
german_idealism_df <- data[data$school=="german_idealism",]
nietzsche_df <- data[data$school=="nietzsche",]
phenomenology_df <- data[data$school=="phenomenology",]
plato_df <- data[data$school=="plato",]
rationalism_df <- data[data$school=="rationalism",]
stoicism_df <- data[data$school=="stoicism",]
# Random sample generator function
random_sam <- function(school_df){
i <- sample(1:nrow(school_df), 10000, replace=FALSE)
return (school_df[i,])
}
# Get random samples
set.seed(1234)
analytic_sam <- random_sam(analytic_df)
aristotle_sam <- random_sam(aristotle_df)
capitalism_sam <- random_sam(capitalism_df)
communism_sam <- random_sam(communism_df)
continental_sam <- random_sam(continental_df)
empiricism_sam <- random_sam(empiricism_df)
german_idealism_sam <- random_sam(german_idealism_df)
nietzsche_sam <- random_sam(nietzsche_df)
phenomenology_sam <- random_sam(phenomenology_df)
plato_sam <- random_sam(plato_df)
rationalism_sam <- random_sam(rationalism_df)
# Extract each school's sentiment according to the QDAP dictionary
feminism_sent <- analyzeSentiment(feminism_df$sentence_str)$SentimentQDAP
feminism_result <- convertToDirection(feminism_sent)
# Define sent_count function to calculate the proportion of positive, negative and neutral words
sent_count <- function(school_result){
num_pos <- 0
num_neu <- 0
num_neg <- 0
for(i in 1:length(school_result)){
if(is.na(school_result[i]) == FALSE){
if(school_result[i] == "positive"){
num_pos <- num_pos+1
}
else if(school_result[i] == "neutral"){
num_neu <- num_neu+1
}
else{num_neg <- num_neg+1}
}
}
count_df <- data.frame(positive=num_pos, neutral=num_neu, negative=num_neg )
return(count_df)
}
# Pie chart for sentimental analysis of feminism
feminism_ct <- sent_count(feminism_result)
pie_labels <- paste0(colnames(feminism_ct), " = ", round(100 * feminism_ct/sum(feminism_ct), 2), "%")
pie(c(feminism_ct$pos,feminism_ct$neu,feminism_ct$neg),labels=pie_labels, main="Pie Chart for Feminism")
# analytic
analytic_sent <- analyzeSentiment(analytic_sam$sentence_str)$SentimentQDAP
analytic_result <- convertToDirection(analytic_sent)
# aristotle
aristotle_sent <- analyzeSentiment(aristotle_sam$sentence_str)$SentimentQDAP
aristotle_result <- convertToDirection(aristotle_sent)
# capitalism
capitalism_sent <- analyzeSentiment(capitalism_sam$sentence_str)$SentimentQDAP
capitalism_result <- convertToDirection(capitalism_sent)
# communism
communism_sent <- analyzeSentiment(communism_sam$sentence_str)$SentimentQDAP
communism_result <- convertToDirection(communism_sent)
# continental
continental_sent <- analyzeSentiment(continental_sam$sentence_str)$SentimentQDAP
continental_result <- convertToDirection(continental_sent)
# empiricism
empiricism_sent <- analyzeSentiment(empiricism_sam$sentence_str)$SentimentQDAP
empiricism_result <- convertToDirection(empiricism_sent)
# german_idealism
german_idealism_sent <- analyzeSentiment(german_idealism_sam$sentence_str)$SentimentQDAP
german_idealism_result <- convertToDirection(german_idealism_sent)
# nietzsche
nietzsche_sent <- analyzeSentiment(nietzsche_sam$sentence_str)$SentimentQDAP
nietzsche_result <- convertToDirection(nietzsche_sent)
# phenomenology
phenomenology_sent <- analyzeSentiment(phenomenology_sam$sentence_str)$SentimentQDAP
phenomenology_result <- convertToDirection(phenomenology_sent)
# plato
plato_sent <- analyzeSentiment(plato_sam$sentence_str)$SentimentQDAP
plato_result <- convertToDirection(plato_sent)
# rationalism
rationalism_sent <- analyzeSentiment(rationalism_sam$sentence_str)$SentimentQDAP
rationalism_result <- convertToDirection(rationalism_sent)
# stoicism
stoicism_sent <- analyzeSentiment(stoicism_df$sentence_str)$SentimentQDAP
stoicism_result <- convertToDirection(stoicism_sent)
# Find other schools' proportion and make a comparing plot.
analytic_ct <- sent_count(analytic_result)
aristotle_ct <- sent_count(aristotle_result)
capitalism_ct <- sent_count(capitalism_result)
communism_ct <- sent_count(communism_result)
continental_ct <- sent_count(continental_result)
empiricism_ct <- sent_count(empiricism_result)
german_idealism_ct <- sent_count(german_idealism_result)
nietzsche_ct <- sent_count(nietzsche_result)
phenomenology_ct <- sent_count(phenomenology_result)
plato_ct <- sent_count(plato_result)
rationalism_ct <- sent_count(rationalism_result)
stoicism_ct <- sent_count(stoicism_result)
# Create count data frame and transform to appropriate format.
school_sent_df <- rbind(analytic_ct,aristotle_ct,capitalism_ct,communism_ct,continental_ct,empiricism_ct,german_idealism_ct,feminism_ct,nietzsche_ct,phenomenology_ct,plato_ct,rationalism_ct,stoicism_ct)
school_sent_df$School <- c("analytic","aristotle","capitalism","communism","continental","empiricism","german_idealism","feminism","nietzsche","phenomenology","plato","rationalism","stoicism")
school_sent_df <- school_sent_df %>% pivot_longer(cols = !School, names_to = "Sentiment", values_to = "Count")
school_sent_df$Total <- ifelse(school_sent_df$School=="stoicism",2535,
ifelse(school_sent_df$School=="feminism", 18635, 10000))
school_sent_df$Percent <- paste(round((school_sent_df$Count/school_sent_df$Total)*100, digits=2), "%", sep="")
# Make a line chart for comparing proportion of sentiments
ggplot(data=school_sent_df, aes(x=School, y=Percent,group=Sentiment, color=Sentiment)) +
geom_line()+
geom_point()+
labs(title = "Feminism sentiment proportion for each school's article",
x = "Time")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.8))
# Check for the publication date of articles
sum_fem_yr <- feminism_df %>% group_by(original_publication_date) %>%
summarise(publication_n = n())
sum_fem_yr
#  Get subsets for each year
pub_1792 <- feminism_df[feminism_df$original_publication_date=="1792",]
pub_1949 <- feminism_df[feminism_df$original_publication_date=="1949",]
pub_1981 <- feminism_df[feminism_df$original_publication_date=="1981",]
# Sentimental Analysis by years
sent_1792 <- analyzeSentiment(pub_1792$sentence_str)$SentimentQDAP
result_1792 <- convertToDirection(sent_1792)
sent_1949 <- analyzeSentiment(pub_1949$sentence_str)$SentimentQDAP
result_1949 <- convertToDirection(sent_1949)
sent_1981 <- analyzeSentiment(pub_1981$sentence_str)$SentimentQDAP
result_1981 <- convertToDirection(sent_1981)
# Count sentiments for each year
ct_1792 <- sent_count(result_1792)
ct_1949 <- sent_count(result_1949)
ct_1981 <- sent_count(result_1981)
# Sentimental Analysis by years
sent_1792 <- analyzeSentiment(pub_1792$sentence_str)$SentimentQDAP
result_1792 <- convertToDirection(sent_1792)
sent_1949 <- analyzeSentiment(pub_1949$sentence_str)$SentimentQDAP
result_1949 <- convertToDirection(sent_1949)
sent_1981 <- analyzeSentiment(pub_1981$sentence_str)$SentimentQDAP
result_1981 <- convertToDirection(sent_1981)
# Count sentiments for each year
ct_1792 <- sent_count(result_1792)
ct_1949 <- sent_count(result_1949)
ct_1981 <- sent_count(result_1981)
# Create Count dataframe and transform its columns and rows.
time_sent_df <- rbind(ct_1792,ct_1949,ct_1981)
time_sent_df$time <- c("1792","1949","1981")
time_sent_df <- time_sent_df %>% pivot_longer(cols = !time, names_to = "Sentiment",
values_to = "Count")
time_sent_df$Total <- ifelse(time_sent_df$time==1792,2559,
ifelse(time_sent_df$time==1949,13015,3058))
time_sent_df$Percent <- paste(round((time_sent_df$Count/time_sent_df$Total)*100, digits=2), "%", sep="")
# Create Count dataframe and transform its columns and rows.
time_sent_df <- rbind(ct_1792,ct_1949,ct_1981)
time_sent_df$time <- c("1792","1949","1981")
time_sent_df <- time_sent_df %>% pivot_longer(cols = !time, names_to = "Sentiment",
values_to = "Count")
time_sent_df$Total <- ifelse(time_sent_df$time==1792,2559,
ifelse(time_sent_df$time==1949,13015,3058))
time_sent_df$Percent <- paste(round((time_sent_df$Count/time_sent_df$Total)*100, digits=2), "%", sep="")
ggplot(data=time_sent_df, aes(x=time, y=Count, fill=Sentiment)) +
geom_bar(stat="identity")+
labs(title = "Feminism sentiment counts for each year's article",
x = "Year")
ggplot(data=time_sent_df, aes(x=time, y=Percent,group=Sentiment, color=Sentiment)) +
geom_line()+
geom_point()+
labs(title = "Feminism sentiment proportion for each year's article",
x = "Year")
# Clean text
corp <- Corpus(VectorSource(feminism_df$sentence_str))
corp <- tm_map(corp, removePunctuation)
corp <- tm_map(corp, content_transformer(tolower))
corp <- tm_map(corp, removeNumbers)
corp <- tm_map(corp, removeWords, stopwords("english"))
corp <- tm_map(corp, stripWhitespace)
tdm <- TermDocumentMatrix(corp)
tdm_tidy <- tidy(tdm)
tdm_overall <- summarise(group_by(tdm_tidy, term), sum(count))
# Create Word Cloud
wordcloud(words = tdm_overall$term, freq = tdm_overall$`sum(count)`, scale=c(5,0.5),
max.words=49,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
# Group the data by authors
feminism_df %>% group_by(author) %>%
summarise(author_n = n())
# Create word cloud for Beauvoir
beauvoir_df <- feminism_df[feminism_df$author=="Beauvoir",]
b_corp <- Corpus(VectorSource(beauvoir_df$sentence_str))
b_corp <- tm_map(b_corp, removePunctuation)
b_corp <- tm_map(b_corp, content_transformer(tolower))
b_corp <- tm_map(b_corp, removeNumbers)
b_corp <- tm_map(b_corp, removeWords, stopwords("english"))
b_corp <- tm_map(b_corp, stripWhitespace)
b_tdm <- TermDocumentMatrix(b_corp)
b_tdm_tidy <- tidy(b_tdm)
b_tdm_overall <- summarise(group_by(b_tdm_tidy, term), sum(count))
# Create Word Cloud
wordcloud(words = b_tdm_overall$term, freq = b_tdm_overall$`sum(count)`, scale=c(5,0.5),
max.words=75,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Reds"))
davis_df <- feminism_df[feminism_df$author=="Davis",]
d_corp <- Corpus(VectorSource(davis_df$sentence_str))
d_corp <- tm_map(d_corp, removePunctuation)
d_corp <- tm_map(d_corp, content_transformer(tolower))
d_corp <- tm_map(d_corp, removeNumbers)
d_corp <- tm_map(d_corp, removeWords, stopwords("english"))
d_corp <- tm_map(d_corp, stripWhitespace)
d_tdm <- TermDocumentMatrix(d_corp)
d_tdm_tidy <- tidy(d_tdm)
d_tdm_overall <- summarise(group_by(d_tdm_tidy, term), sum(count))
# Create Word Cloud
wordcloud(words = d_tdm_overall$term, freq = d_tdm_overall$`sum(count)`, scale=c(5,0.5),
max.words=75,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Reds"))
wollstonecraft_df <- feminism_df[feminism_df$author=="Wollstonecraft",]
w_corp <- Corpus(VectorSource(wollstonecraft_df$sentence_str))
w_corp <- tm_map(w_corp, removePunctuation)
w_corp <- tm_map(w_corp, content_transformer(tolower))
w_corp <- tm_map(w_corp, removeNumbers)
w_corp <- tm_map(w_corp, removeWords, stopwords("english"))
w_corp <- tm_map(w_corp, stripWhitespace)
w_tdm <- TermDocumentMatrix(w_corp)
w_tdm_tidy <- tidy(w_tdm)
w_tdm_overall <- summarise(group_by(w_tdm_tidy, term), sum(count))
# Create Word Cloud
wordcloud(words = w_tdm_overall$term, freq = w_tdm_overall$`sum(count)`, scale=c(5,0.5),
max.words=45,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Reds"))
